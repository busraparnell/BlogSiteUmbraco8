@inherits UmbracoViewPage

@{
    var title = Model.HasValue(alias: "title") ? Model.Value(alias: "title") : Model.Name;
    var subtitle = Model.HasValue(alias: "subtitle") ? Model.Value<string>
    (alias: "subtitle") : "";
    var image = Model.Value<IPublishedContent>
        (alias: "mainImage", fallback: Fallback.ToAncestors);

    string imageUrl = "";
    if (image != null)
    {
        imageUrl = image.GetCropUrl(width: 1899, height: 532);
    }

    var authorName = Model.HasProperty(alias: "authorName") && Model.HasValue(alias: "authorName") ? Model.Value<string>
        (alias: "authorName") : "";
    DateTime articleDate = Model.HasProperty(alias: "articleDate") && Model.HasValue(alias: "articleDate") ? Model.Value<DateTime>
        (alias: "articleDate") : DateTime.MinValue;

    bool hasAuthorDetails = !string.IsNullOrWhiteSpace(authorName) || articleDate != DateTime.MinValue;

}
<!-- Page Header -->
<header class="masthead" style="@(!string.IsNullOrWhiteSpace(imageUrl) ? " background-image: url('" + imageUrl +"')" : null)">
    <div class="overlay"></div>
    <div class="container">
        <div class="row">
            <div class="col-lg-8 col-md-10 mx-auto">
                <div class="page-heading">
                    <h1>@title</h1>
                    @if (!string.IsNullOrWhiteSpace(subtitle))
                    {
                        if (hasAuthorDetails)
                        {
                            <h2 class="subheading">@subtitle</h2>
                        }
                        else
                        {
                            <span class="subheading">@subtitle</span>
                        }
                    }

                    @if (hasAuthorDetails)
                    {
                        <span class="meta">
                            Posted
                            @if (!string.IsNullOrWhiteSpace(authorName))
                            {
                                @Html.Raw("by ") @authorName
                            }
                            on @articleDate.ToString(format: "MMMM dd, yyyy")
                        </span>

                    }
                </div>
            </div>
        </div>
    </div>
</header>
